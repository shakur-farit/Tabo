//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEnchantHolder;

    public static Entitas.IMatcher<GameEntity> EnchantHolder {
        get {
            if (_matcherEnchantHolder == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EnchantHolder);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEnchantHolder = matcher;
            }

            return _matcherEnchantHolder;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Meta.Features.Hud.EnchantHolderComponent enchantHolder { get { return (Code.Meta.Features.Hud.EnchantHolderComponent)GetComponent(GameComponentsLookup.EnchantHolder); } }
    public Code.Meta.Features.Hud.EnchantHolder.Behaviours.EnchantHolderBehaviour EnchantHolder { get { return enchantHolder.Value; } }
    public bool hasEnchantHolder { get { return HasComponent(GameComponentsLookup.EnchantHolder); } }

    public GameEntity AddEnchantHolder(Code.Meta.Features.Hud.EnchantHolder.Behaviours.EnchantHolderBehaviour newValue) {
        var index = GameComponentsLookup.EnchantHolder;
        var component = (Code.Meta.Features.Hud.EnchantHolderComponent)CreateComponent(index, typeof(Code.Meta.Features.Hud.EnchantHolderComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceEnchantHolder(Code.Meta.Features.Hud.EnchantHolder.Behaviours.EnchantHolderBehaviour newValue) {
        var index = GameComponentsLookup.EnchantHolder;
        var component = (Code.Meta.Features.Hud.EnchantHolderComponent)CreateComponent(index, typeof(Code.Meta.Features.Hud.EnchantHolderComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveEnchantHolder() {
        RemoveComponent(GameComponentsLookup.EnchantHolder);
        return this;
    }
}
