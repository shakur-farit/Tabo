//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherStatusDuration;

    public static Entitas.IMatcher<GameEntity> StatusDuration {
        get {
            if (_matcherStatusDuration == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.StatusDuration);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherStatusDuration = matcher;
            }

            return _matcherStatusDuration;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Statuses.StatusComponents.StatusDuration statusDuration { get { return (Code.Gameplay.Features.Statuses.StatusComponents.StatusDuration)GetComponent(GameComponentsLookup.StatusDuration); } }
    public float StatusDuration { get { return statusDuration.Value; } }
    public bool hasStatusDuration { get { return HasComponent(GameComponentsLookup.StatusDuration); } }

    public GameEntity AddStatusDuration(float newValue) {
        var index = GameComponentsLookup.StatusDuration;
        var component = (Code.Gameplay.Features.Statuses.StatusComponents.StatusDuration)CreateComponent(index, typeof(Code.Gameplay.Features.Statuses.StatusComponents.StatusDuration));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceStatusDuration(float newValue) {
        var index = GameComponentsLookup.StatusDuration;
        var component = (Code.Gameplay.Features.Statuses.StatusComponents.StatusDuration)CreateComponent(index, typeof(Code.Gameplay.Features.Statuses.StatusComponents.StatusDuration));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveStatusDuration() {
        RemoveComponent(GameComponentsLookup.StatusDuration);
        return this;
    }
}
