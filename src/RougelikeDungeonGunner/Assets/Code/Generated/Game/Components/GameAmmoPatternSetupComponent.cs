//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAmmoPatternSetup;

    public static Entitas.IMatcher<GameEntity> AmmoPatternSetup {
        get {
            if (_matcherAmmoPatternSetup == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AmmoPatternSetup);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAmmoPatternSetup = matcher;
            }

            return _matcherAmmoPatternSetup;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Ammo.AmmoPatternSetupComponent ammoPatternSetup { get { return (Code.Gameplay.Features.Ammo.AmmoPatternSetupComponent)GetComponent(GameComponentsLookup.AmmoPatternSetup); } }
    public Code.Gameplay.Features.Weapon.Configs.AmmoPatternSetup AmmoPatternSetup { get { return ammoPatternSetup.Value; } }
    public bool hasAmmoPatternSetup { get { return HasComponent(GameComponentsLookup.AmmoPatternSetup); } }

    public GameEntity AddAmmoPatternSetup(Code.Gameplay.Features.Weapon.Configs.AmmoPatternSetup newValue) {
        var index = GameComponentsLookup.AmmoPatternSetup;
        var component = (Code.Gameplay.Features.Ammo.AmmoPatternSetupComponent)CreateComponent(index, typeof(Code.Gameplay.Features.Ammo.AmmoPatternSetupComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceAmmoPatternSetup(Code.Gameplay.Features.Weapon.Configs.AmmoPatternSetup newValue) {
        var index = GameComponentsLookup.AmmoPatternSetup;
        var component = (Code.Gameplay.Features.Ammo.AmmoPatternSetupComponent)CreateComponent(index, typeof(Code.Gameplay.Features.Ammo.AmmoPatternSetupComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveAmmoPatternSetup() {
        RemoveComponent(GameComponentsLookup.AmmoPatternSetup);
        return this;
    }
}
