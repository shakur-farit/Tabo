//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWeaponEnchantsQueue;

    public static Entitas.IMatcher<GameEntity> WeaponEnchantsQueue {
        get {
            if (_matcherWeaponEnchantsQueue == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WeaponEnchantsQueue);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWeaponEnchantsQueue = matcher;
            }

            return _matcherWeaponEnchantsQueue;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Weapon.WeaponEnchantsQueue weaponEnchantsQueue { get { return (Code.Gameplay.Features.Weapon.WeaponEnchantsQueue)GetComponent(GameComponentsLookup.WeaponEnchantsQueue); } }
    public System.Collections.Generic.Queue<Code.Gameplay.Features.Statuses.StatusTypeId> WeaponEnchantsQueue { get { return weaponEnchantsQueue.Value; } }
    public bool hasWeaponEnchantsQueue { get { return HasComponent(GameComponentsLookup.WeaponEnchantsQueue); } }

    public GameEntity AddWeaponEnchantsQueue(System.Collections.Generic.Queue<Code.Gameplay.Features.Statuses.StatusTypeId> newValue) {
        var index = GameComponentsLookup.WeaponEnchantsQueue;
        var component = (Code.Gameplay.Features.Weapon.WeaponEnchantsQueue)CreateComponent(index, typeof(Code.Gameplay.Features.Weapon.WeaponEnchantsQueue));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceWeaponEnchantsQueue(System.Collections.Generic.Queue<Code.Gameplay.Features.Statuses.StatusTypeId> newValue) {
        var index = GameComponentsLookup.WeaponEnchantsQueue;
        var component = (Code.Gameplay.Features.Weapon.WeaponEnchantsQueue)CreateComponent(index, typeof(Code.Gameplay.Features.Weapon.WeaponEnchantsQueue));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveWeaponEnchantsQueue() {
        RemoveComponent(GameComponentsLookup.WeaponEnchantsQueue);
        return this;
    }
}
