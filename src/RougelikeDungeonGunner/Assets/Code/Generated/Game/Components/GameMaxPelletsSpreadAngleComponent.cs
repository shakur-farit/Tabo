//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMaxPelletsSpreadAngle;

    public static Entitas.IMatcher<GameEntity> MaxPelletsSpreadAngle {
        get {
            if (_matcherMaxPelletsSpreadAngle == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MaxPelletsSpreadAngle);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMaxPelletsSpreadAngle = matcher;
            }

            return _matcherMaxPelletsSpreadAngle;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Weapon.MaxPelletsSpreadAngle maxPelletsSpreadAngle { get { return (Code.Gameplay.Features.Weapon.MaxPelletsSpreadAngle)GetComponent(GameComponentsLookup.MaxPelletsSpreadAngle); } }
    public float MaxPelletsSpreadAngle { get { return maxPelletsSpreadAngle.Value; } }
    public bool hasMaxPelletsSpreadAngle { get { return HasComponent(GameComponentsLookup.MaxPelletsSpreadAngle); } }

    public GameEntity AddMaxPelletsSpreadAngle(float newValue) {
        var index = GameComponentsLookup.MaxPelletsSpreadAngle;
        var component = (Code.Gameplay.Features.Weapon.MaxPelletsSpreadAngle)CreateComponent(index, typeof(Code.Gameplay.Features.Weapon.MaxPelletsSpreadAngle));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceMaxPelletsSpreadAngle(float newValue) {
        var index = GameComponentsLookup.MaxPelletsSpreadAngle;
        var component = (Code.Gameplay.Features.Weapon.MaxPelletsSpreadAngle)CreateComponent(index, typeof(Code.Gameplay.Features.Weapon.MaxPelletsSpreadAngle));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveMaxPelletsSpreadAngle() {
        RemoveComponent(GameComponentsLookup.MaxPelletsSpreadAngle);
        return this;
    }
}
