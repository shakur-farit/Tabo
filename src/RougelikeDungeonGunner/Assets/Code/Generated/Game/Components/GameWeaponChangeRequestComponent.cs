//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWeaponChangeRequest;

    public static Entitas.IMatcher<GameEntity> WeaponChangeRequest {
        get {
            if (_matcherWeaponChangeRequest == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WeaponChangeRequest);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWeaponChangeRequest = matcher;
            }

            return _matcherWeaponChangeRequest;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Weapon.ChangeRequest.Systems.WeaponChangeRequest weaponChangeRequest { get { return (Code.Gameplay.Features.Weapon.ChangeRequest.Systems.WeaponChangeRequest)GetComponent(GameComponentsLookup.WeaponChangeRequest); } }
    public Code.Gameplay.Features.Weapon.WeaponTypeId WeaponChangeRequest { get { return weaponChangeRequest.Value; } }
    public bool hasWeaponChangeRequest { get { return HasComponent(GameComponentsLookup.WeaponChangeRequest); } }

    public GameEntity AddWeaponChangeRequest(Code.Gameplay.Features.Weapon.WeaponTypeId newValue) {
        var index = GameComponentsLookup.WeaponChangeRequest;
        var component = (Code.Gameplay.Features.Weapon.ChangeRequest.Systems.WeaponChangeRequest)CreateComponent(index, typeof(Code.Gameplay.Features.Weapon.ChangeRequest.Systems.WeaponChangeRequest));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceWeaponChangeRequest(Code.Gameplay.Features.Weapon.WeaponTypeId newValue) {
        var index = GameComponentsLookup.WeaponChangeRequest;
        var component = (Code.Gameplay.Features.Weapon.ChangeRequest.Systems.WeaponChangeRequest)CreateComponent(index, typeof(Code.Gameplay.Features.Weapon.ChangeRequest.Systems.WeaponChangeRequest));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveWeaponChangeRequest() {
        RemoveComponent(GameComponentsLookup.WeaponChangeRequest);
        return this;
    }
}
