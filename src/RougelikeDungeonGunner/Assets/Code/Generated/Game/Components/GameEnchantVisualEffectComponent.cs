//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEnchantVisualEffect;

    public static Entitas.IMatcher<GameEntity> EnchantVisualEffect {
        get {
            if (_matcherEnchantVisualEffect == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EnchantVisualEffect);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEnchantVisualEffect = matcher;
            }

            return _matcherEnchantVisualEffect;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Gameplay.Features.Enchants.EnchantVisualEffectComponent enchantVisualEffect { get { return (Code.Gameplay.Features.Enchants.EnchantVisualEffectComponent)GetComponent(GameComponentsLookup.EnchantVisualEffect); } }
    public Code.Gameplay.Features.Enchants.EnchantVisualEffect EnchantVisualEffect { get { return enchantVisualEffect.Value; } }
    public bool hasEnchantVisualEffect { get { return HasComponent(GameComponentsLookup.EnchantVisualEffect); } }

    public GameEntity AddEnchantVisualEffect(Code.Gameplay.Features.Enchants.EnchantVisualEffect newValue) {
        var index = GameComponentsLookup.EnchantVisualEffect;
        var component = (Code.Gameplay.Features.Enchants.EnchantVisualEffectComponent)CreateComponent(index, typeof(Code.Gameplay.Features.Enchants.EnchantVisualEffectComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceEnchantVisualEffect(Code.Gameplay.Features.Enchants.EnchantVisualEffect newValue) {
        var index = GameComponentsLookup.EnchantVisualEffect;
        var component = (Code.Gameplay.Features.Enchants.EnchantVisualEffectComponent)CreateComponent(index, typeof(Code.Gameplay.Features.Enchants.EnchantVisualEffectComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveEnchantVisualEffect() {
        RemoveComponent(GameComponentsLookup.EnchantVisualEffect);
        return this;
    }
}
