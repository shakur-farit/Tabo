//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Code.Gameplay.Features.Dungeon;

public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHeroStartPosition;

    public static Entitas.IMatcher<GameEntity> HeroStartPosition {
        get {
            if (_matcherHeroStartPosition == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HeroStartPosition);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHeroStartPosition = matcher;
            }

            return _matcherHeroStartPosition;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public HeroStartPosition heroStartPosition { get { return (HeroStartPosition)GetComponent(GameComponentsLookup.HeroStartPosition); } }
    public UnityEngine.Vector2 HeroStartPosition { get { return heroStartPosition.Value; } }
    public bool hasHeroStartPosition { get { return HasComponent(GameComponentsLookup.HeroStartPosition); } }

    public GameEntity AddHeroStartPosition(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.HeroStartPosition;
        var component = (HeroStartPosition)CreateComponent(index, typeof(HeroStartPosition));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceHeroStartPosition(UnityEngine.Vector2 newValue) {
        var index = GameComponentsLookup.HeroStartPosition;
        var component = (HeroStartPosition)CreateComponent(index, typeof(HeroStartPosition));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveHeroStartPosition() {
        RemoveComponent(GameComponentsLookup.HeroStartPosition);
        return this;
    }
}
