//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Destructed = 0;
    public const int Parented = 1;
    public const int SelfDestructedTimer = 2;
    public const int Unparented = 3;
    public const int View = 4;
    public const int ViewParent = 5;
    public const int ViewPath = 6;
    public const int ViewPrefab = 7;
    public const int Damage = 8;
    public const int DamageTakenAnimator = 9;
    public const int Id = 10;
    public const int ParentTransform = 11;
    public const int Processed = 12;
    public const int SpriteRenderer = 13;
    public const int StatusVisuals = 14;
    public const int Stunned = 15;
    public const int Transform = 16;
    public const int WorldPosition = 17;
    public const int Ammo = 18;
    public const int AmmoPattern = 19;
    public const int AmmoTypeId = 20;
    public const int LaserBolt = 21;
    public const int LightBullet = 22;
    public const int LongRangeBullet = 23;
    public const int RifleBullet = 24;
    public const int RocketMissile = 25;
    public const int ShotgunShell = 26;
    public const int TargetLimit = 27;
    public const int MinDistanceForRepath = 28;
    public const int Path = 29;
    public const int Pathfinder = 30;
    public const int PathfinderAvailable = 31;
    public const int PathfinderInitialized = 32;
    public const int PathfindingIntervalTimer = 33;
    public const int PathfindingTimerLeft = 34;
    public const int PathfindingTimerUp = 35;
    public const int BaseStats = 36;
    public const int StatChange = 37;
    public const int StatModifiers = 38;
    public const int Cooldown = 39;
    public const int CooldownLeft = 40;
    public const int CooldownUp = 41;
    public const int CollisionTilemap = 42;
    public const int Dungeon = 43;
    public const int DungeonAvailable = 44;
    public const int DungeonTypeId = 45;
    public const int HeroStartPosition = 46;
    public const int ValidPositions = 47;
    public const int ValidSprite = 48;
    public const int DamageEffect = 49;
    public const int Effect = 50;
    public const int EffectValue = 51;
    public const int HealEffect = 52;
    public const int ProducerId = 53;
    public const int TargetId = 54;
    public const int Enchant = 55;
    public const int EnchantAlreadyHeld = 56;
    public const int EnchantDuration = 57;
    public const int EnchantTimeLeft = 58;
    public const int EnchantTypeId = 59;
    public const int EnchantUI = 60;
    public const int EnchantVisualEffect = 61;
    public const int FlameEnchant = 62;
    public const int FreezeEnchant = 63;
    public const int NewCollectedEnchant = 64;
    public const int PoisonEnchant = 65;
    public const int Enemy = 66;
    public const int EnemyAnimator = 67;
    public const int EnemyTypeId = 68;
    public const int Hedusa = 69;
    public const int LastTargetPosition = 70;
    public const int Orc = 71;
    public const int CurrentWeaponTypeId = 72;
    public const int Hero = 73;
    public const int HeroAnimator = 74;
    public const int HeroAvailable = 75;
    public const int HeroTypeId = 76;
    public const int TheGeneral = 77;
    public const int TheScientist = 78;
    public const int TheThief = 79;
    public const int Unweaponed = 80;
    public const int Weaponed = 81;
    public const int DungeonTypeOnLevel = 82;
    public const int EnemiesInLevelCount = 83;
    public const int EnemiesInLevelCountCalculated = 84;
    public const int EnemyWave = 85;
    public const int EnemyWaves = 86;
    public const int FinishingTime = 87;
    public const int FinishingTimeLeft = 88;
    public const int HeroSafeZoneRadius = 89;
    public const int Level = 90;
    public const int LevelTypeId = 91;
    public const int SpawnedEnemyWaves = 92;
    public const int StartingTime = 93;
    public const int StartingTimeLeft = 94;
    public const int StartingTimeUp = 95;
    public const int CurrentHp = 96;
    public const int Dead = 97;
    public const int MaxHp = 98;
    public const int ProcessingDeath = 99;
    public const int Coins = 100;
    public const int Collected = 101;
    public const int LootTypeId = 102;
    public const int PickupRadius = 103;
    public const int Pullable = 104;
    public const int Pulling = 105;
    public const int Direction = 106;
    public const int MovementAvailable = 107;
    public const int Moving = 108;
    public const int Speed = 109;
    public const int Affected = 110;
    public const int Applied = 111;
    public const int ApplierStatusLink = 112;
    public const int Flame = 113;
    public const int Freeze = 114;
    public const int Period = 115;
    public const int Poison = 116;
    public const int Status = 117;
    public const int StatusDuration = 118;
    public const int StatusTimeLeft = 119;
    public const int StatusTypeId = 120;
    public const int TimeSinceLastTick = 121;
    public const int Unapplied = 122;
    public const int BoxCastHeight = 123;
    public const int BoxCastWidth = 124;
    public const int CastStartPositionTransform = 125;
    public const int CollectTargetsContinuously = 126;
    public const int CollectTargetsInterval = 127;
    public const int CollectTargetsTimer = 128;
    public const int CollisionInFront = 129;
    public const int ForwardCastDistance = 130;
    public const int ProcessedTargets = 131;
    public const int Radius = 132;
    public const int ReadyToCollectTargets = 133;
    public const int TargetLayerMask = 134;
    public const int TargetsBuffer = 135;
    public const int ClosestTargetPosition = 136;
    public const int CurrentAmmoCount = 137;
    public const int EffectSetups = 138;
    public const int EnemyPistol = 139;
    public const int EnemyWeapon = 140;
    public const int FirePositionTransform = 141;
    public const int HeroAutomaticPistol = 142;
    public const int HeroLaserBlaster = 143;
    public const int HeroMachinegun = 144;
    public const int HeroPistol = 145;
    public const int HeroPlasmaGun = 146;
    public const int HeroRevolver = 147;
    public const int HeroRocketLauncher = 148;
    public const int HeroShotgun = 149;
    public const int HeroSniper = 150;
    public const int HeroWeapon = 151;
    public const int InfinityAmmo = 152;
    public const int MagazineNotEmpty = 153;
    public const int MagazineSize = 154;
    public const int MaxPelletsDeviation = 155;
    public const int MaxWeaponEnchantsCount = 156;
    public const int MinPelletsDeviation = 157;
    public const int MultiPellet = 158;
    public const int Pierce = 159;
    public const int Precharged = 160;
    public const int PrechargeTime = 161;
    public const int PrechargeTimeLeft = 162;
    public const int ReadyToShoot = 163;
    public const int Reloading = 164;
    public const int ReloadTime = 165;
    public const int ReloadTimeLeft = 166;
    public const int Shooting = 167;
    public const int Shot = 168;
    public const int StatusSetups = 169;
    public const int Weapon = 170;
    public const int WeaponEnchants = 171;
    public const int WeaponOwnerId = 172;
    public const int WeaponOwnerTypeId = 173;
    public const int WeaponRotationAngle = 174;
    public const int WeaponRotationPointTransform = 175;
    public const int WeaponTypeId = 176;
    public const int AmmoHolder = 177;
    public const int CoinsHolder = 178;
    public const int EnchantHolder = 179;
    public const int HeartHolder = 180;
    public const int ReloadingAnimator = 181;
    public const int TimerHolder = 182;
    public const int WeaponHolder = 183;

    public const int TotalComponents = 184;

    public static readonly string[] componentNames = {
        "Destructed",
        "Parented",
        "SelfDestructedTimer",
        "Unparented",
        "View",
        "ViewParent",
        "ViewPath",
        "ViewPrefab",
        "Damage",
        "DamageTakenAnimator",
        "Id",
        "ParentTransform",
        "Processed",
        "SpriteRenderer",
        "StatusVisuals",
        "Stunned",
        "Transform",
        "WorldPosition",
        "Ammo",
        "AmmoPattern",
        "AmmoTypeId",
        "LaserBolt",
        "LightBullet",
        "LongRangeBullet",
        "RifleBullet",
        "RocketMissile",
        "ShotgunShell",
        "TargetLimit",
        "MinDistanceForRepath",
        "Path",
        "Pathfinder",
        "PathfinderAvailable",
        "PathfinderInitialized",
        "PathfindingIntervalTimer",
        "PathfindingTimerLeft",
        "PathfindingTimerUp",
        "BaseStats",
        "StatChange",
        "StatModifiers",
        "Cooldown",
        "CooldownLeft",
        "CooldownUp",
        "CollisionTilemap",
        "Dungeon",
        "DungeonAvailable",
        "DungeonTypeId",
        "HeroStartPosition",
        "ValidPositions",
        "ValidSprite",
        "DamageEffect",
        "Effect",
        "EffectValue",
        "HealEffect",
        "ProducerId",
        "TargetId",
        "Enchant",
        "EnchantAlreadyHeld",
        "EnchantDuration",
        "EnchantTimeLeft",
        "EnchantTypeId",
        "EnchantUI",
        "EnchantVisualEffect",
        "FlameEnchant",
        "FreezeEnchant",
        "NewCollectedEnchant",
        "PoisonEnchant",
        "Enemy",
        "EnemyAnimator",
        "EnemyTypeId",
        "Hedusa",
        "LastTargetPosition",
        "Orc",
        "CurrentWeaponTypeId",
        "Hero",
        "HeroAnimator",
        "HeroAvailable",
        "HeroTypeId",
        "TheGeneral",
        "TheScientist",
        "TheThief",
        "Unweaponed",
        "Weaponed",
        "DungeonTypeOnLevel",
        "EnemiesInLevelCount",
        "EnemiesInLevelCountCalculated",
        "EnemyWave",
        "EnemyWaves",
        "FinishingTime",
        "FinishingTimeLeft",
        "HeroSafeZoneRadius",
        "Level",
        "LevelTypeId",
        "SpawnedEnemyWaves",
        "StartingTime",
        "StartingTimeLeft",
        "StartingTimeUp",
        "CurrentHp",
        "Dead",
        "MaxHp",
        "ProcessingDeath",
        "Coins",
        "Collected",
        "LootTypeId",
        "PickupRadius",
        "Pullable",
        "Pulling",
        "Direction",
        "MovementAvailable",
        "Moving",
        "Speed",
        "Affected",
        "Applied",
        "ApplierStatusLink",
        "Flame",
        "Freeze",
        "Period",
        "Poison",
        "Status",
        "StatusDuration",
        "StatusTimeLeft",
        "StatusTypeId",
        "TimeSinceLastTick",
        "Unapplied",
        "BoxCastHeight",
        "BoxCastWidth",
        "CastStartPositionTransform",
        "CollectTargetsContinuously",
        "CollectTargetsInterval",
        "CollectTargetsTimer",
        "CollisionInFront",
        "ForwardCastDistance",
        "ProcessedTargets",
        "Radius",
        "ReadyToCollectTargets",
        "TargetLayerMask",
        "TargetsBuffer",
        "ClosestTargetPosition",
        "CurrentAmmoCount",
        "EffectSetups",
        "EnemyPistol",
        "EnemyWeapon",
        "FirePositionTransform",
        "HeroAutomaticPistol",
        "HeroLaserBlaster",
        "HeroMachinegun",
        "HeroPistol",
        "HeroPlasmaGun",
        "HeroRevolver",
        "HeroRocketLauncher",
        "HeroShotgun",
        "HeroSniper",
        "HeroWeapon",
        "InfinityAmmo",
        "MagazineNotEmpty",
        "MagazineSize",
        "MaxPelletsDeviation",
        "MaxWeaponEnchantsCount",
        "MinPelletsDeviation",
        "MultiPellet",
        "Pierce",
        "Precharged",
        "PrechargeTime",
        "PrechargeTimeLeft",
        "ReadyToShoot",
        "Reloading",
        "ReloadTime",
        "ReloadTimeLeft",
        "Shooting",
        "Shot",
        "StatusSetups",
        "Weapon",
        "WeaponEnchants",
        "WeaponOwnerId",
        "WeaponOwnerTypeId",
        "WeaponRotationAngle",
        "WeaponRotationPointTransform",
        "WeaponTypeId",
        "AmmoHolder",
        "CoinsHolder",
        "EnchantHolder",
        "HeartHolder",
        "ReloadingAnimator",
        "TimerHolder",
        "WeaponHolder"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.Destructed),
        typeof(Code.Common.Parented),
        typeof(Code.Common.SelfDestructedTimer),
        typeof(Code.Common.Unparented),
        typeof(Code.Common.View),
        typeof(Code.Common.ViewParent),
        typeof(Code.Common.ViewPath),
        typeof(Code.Common.ViewPrefab),
        typeof(Code.Gameplay.Common.Damage),
        typeof(Code.Gameplay.Common.DamageTakenAnimatorComponent),
        typeof(Code.Gameplay.Common.Id),
        typeof(Code.Gameplay.Common.ParentTransform),
        typeof(Code.Gameplay.Common.Processed),
        typeof(Code.Gameplay.Common.SpriteRendererComponent),
        typeof(Code.Gameplay.Common.StatusVisualsComponent),
        typeof(Code.Gameplay.Common.Stunned),
        typeof(Code.Gameplay.Common.TransformComponent),
        typeof(Code.Gameplay.Common.WorldPosition),
        typeof(Code.Gameplay.Features.Ammo.Ammo),
        typeof(Code.Gameplay.Features.Ammo.AmmoPatternComponent),
        typeof(Code.Gameplay.Features.Ammo.AmmoTypeIdComponent),
        typeof(Code.Gameplay.Features.Ammo.LaserBolt),
        typeof(Code.Gameplay.Features.Ammo.LightBullet),
        typeof(Code.Gameplay.Features.Ammo.LongRangeBullet),
        typeof(Code.Gameplay.Features.Ammo.RifleBullet),
        typeof(Code.Gameplay.Features.Ammo.RocketMissile),
        typeof(Code.Gameplay.Features.Ammo.ShotgunShell),
        typeof(Code.Gameplay.Features.Ammo.TargetLimit),
        typeof(Code.Gameplay.Features.AStar.MinDistanceForRepath),
        typeof(Code.Gameplay.Features.AStar.Path),
        typeof(Code.Gameplay.Features.AStar.Pathfinder),
        typeof(Code.Gameplay.Features.AStar.PathfinderAvailable),
        typeof(Code.Gameplay.Features.AStar.PathfinderInitialized),
        typeof(Code.Gameplay.Features.AStar.PathfindingIntervalTimer),
        typeof(Code.Gameplay.Features.AStar.PathfindingTimerLeft),
        typeof(Code.Gameplay.Features.AStar.PathfindingTimerUp),
        typeof(Code.Gameplay.Features.CharacterStats.BaseStats),
        typeof(Code.Gameplay.Features.CharacterStats.StatChange),
        typeof(Code.Gameplay.Features.CharacterStats.StatModifiers),
        typeof(Code.Gameplay.Features.Cooldowns.Cooldown),
        typeof(Code.Gameplay.Features.Cooldowns.CooldownLeft),
        typeof(Code.Gameplay.Features.Cooldowns.CooldownUp),
        typeof(Code.Gameplay.Features.Dungeon.CollisionTilemap),
        typeof(Code.Gameplay.Features.Dungeon.Dungeon),
        typeof(Code.Gameplay.Features.Dungeon.DungeonAvailable),
        typeof(Code.Gameplay.Features.Dungeon.DungeonTypeIdComponent),
        typeof(Code.Gameplay.Features.Dungeon.HeroStartPosition),
        typeof(Code.Gameplay.Features.Dungeon.ValidPositions),
        typeof(Code.Gameplay.Features.Dungeon.ValidSprite),
        typeof(Code.Gameplay.Features.Effects.DamageEffect),
        typeof(Code.Gameplay.Features.Effects.Effect),
        typeof(Code.Gameplay.Features.Effects.EffectValue),
        typeof(Code.Gameplay.Features.Effects.HealEffect),
        typeof(Code.Gameplay.Features.Effects.ProducerId),
        typeof(Code.Gameplay.Features.Effects.TargetId),
        typeof(Code.Gameplay.Features.Enchants.Enchant),
        typeof(Code.Gameplay.Features.Enchants.EnchantAlreadyHeld),
        typeof(Code.Gameplay.Features.Enchants.EnchantDuration),
        typeof(Code.Gameplay.Features.Enchants.EnchantTimeLeft),
        typeof(Code.Gameplay.Features.Enchants.EnchantTypeIdComponent),
        typeof(Code.Gameplay.Features.Enchants.EnchantUIComponent),
        typeof(Code.Gameplay.Features.Enchants.EnchantVisualEffectComponent),
        typeof(Code.Gameplay.Features.Enchants.FlameEnchant),
        typeof(Code.Gameplay.Features.Enchants.FreezeEnchant),
        typeof(Code.Gameplay.Features.Enchants.NewCollectedEnchant),
        typeof(Code.Gameplay.Features.Enchants.PoisonEnchant),
        typeof(Code.Gameplay.Features.Enemy.Enemy),
        typeof(Code.Gameplay.Features.Enemy.EnemyAnimatorComponent),
        typeof(Code.Gameplay.Features.Enemy.EnemyTypeIdComponent),
        typeof(Code.Gameplay.Features.Enemy.Hedusa),
        typeof(Code.Gameplay.Features.Enemy.LastTargetPosition),
        typeof(Code.Gameplay.Features.Enemy.Orc),
        typeof(Code.Gameplay.Features.Hero.CurrentWeaponTypeId),
        typeof(Code.Gameplay.Features.Hero.Hero),
        typeof(Code.Gameplay.Features.Hero.HeroAnimatorComponent),
        typeof(Code.Gameplay.Features.Hero.HeroAvailable),
        typeof(Code.Gameplay.Features.Hero.HeroTypeIdComponent),
        typeof(Code.Gameplay.Features.Hero.TheGeneral),
        typeof(Code.Gameplay.Features.Hero.TheScientist),
        typeof(Code.Gameplay.Features.Hero.TheThief),
        typeof(Code.Gameplay.Features.Hero.Unweaponed),
        typeof(Code.Gameplay.Features.Hero.Weaponed),
        typeof(Code.Gameplay.Features.Level.DungeonTypeOnLevel),
        typeof(Code.Gameplay.Features.Level.EnemiesInLevelCount),
        typeof(Code.Gameplay.Features.Level.EnemiesInLevelCountCalculated),
        typeof(Code.Gameplay.Features.Level.EnemyWaveComponent),
        typeof(Code.Gameplay.Features.Level.EnemyWaves),
        typeof(Code.Gameplay.Features.Level.FinishingTime),
        typeof(Code.Gameplay.Features.Level.FinishingTimeLeft),
        typeof(Code.Gameplay.Features.Level.HeroSafeZoneRadius),
        typeof(Code.Gameplay.Features.Level.Level),
        typeof(Code.Gameplay.Features.Level.LevelTypeIdComponent),
        typeof(Code.Gameplay.Features.Level.SpawnedEnemyWaves),
        typeof(Code.Gameplay.Features.Level.StartingTime),
        typeof(Code.Gameplay.Features.Level.StartingTimeLeft),
        typeof(Code.Gameplay.Features.Level.StartingTimeUp),
        typeof(Code.Gameplay.Features.Lifetime.CurrentHp),
        typeof(Code.Gameplay.Features.Lifetime.Dead),
        typeof(Code.Gameplay.Features.Lifetime.MaxHp),
        typeof(Code.Gameplay.Features.Lifetime.ProcessingDeath),
        typeof(Code.Gameplay.Features.Loot.LootComponents.Coins),
        typeof(Code.Gameplay.Features.Loot.LootComponents.Collected),
        typeof(Code.Gameplay.Features.Loot.LootComponents.LootTypeIdComponent),
        typeof(Code.Gameplay.Features.Loot.LootComponents.PickupRadius),
        typeof(Code.Gameplay.Features.Loot.LootComponents.Pullable),
        typeof(Code.Gameplay.Features.Loot.LootComponents.Pulling),
        typeof(Code.Gameplay.Features.Movement.Direction),
        typeof(Code.Gameplay.Features.Movement.MovementAvailable),
        typeof(Code.Gameplay.Features.Movement.Moving),
        typeof(Code.Gameplay.Features.Movement.Speed),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Affected),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Applied),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.ApplierStatusLink),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Flame),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Freeze),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Period),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Poison),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Status),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.StatusDuration),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.StatusTimeLeft),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.StatusTypeIdComponent),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.TimeSinceLastTick),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Unapplied),
        typeof(Code.Gameplay.Features.TargetCollection.BoxCastHeight),
        typeof(Code.Gameplay.Features.TargetCollection.BoxCastWidth),
        typeof(Code.Gameplay.Features.TargetCollection.CastStartPositionTransform),
        typeof(Code.Gameplay.Features.TargetCollection.CollectTargetsContinuously),
        typeof(Code.Gameplay.Features.TargetCollection.CollectTargetsInterval),
        typeof(Code.Gameplay.Features.TargetCollection.CollectTargetsTimer),
        typeof(Code.Gameplay.Features.TargetCollection.CollisionInFront),
        typeof(Code.Gameplay.Features.TargetCollection.ForwardCastDistance),
        typeof(Code.Gameplay.Features.TargetCollection.ProcessedTargets),
        typeof(Code.Gameplay.Features.TargetCollection.Radius),
        typeof(Code.Gameplay.Features.TargetCollection.ReadyToCollectTargets),
        typeof(Code.Gameplay.Features.TargetCollection.TargetLayerMask),
        typeof(Code.Gameplay.Features.TargetCollection.TargetsBuffer),
        typeof(Code.Gameplay.Features.Weapon.ClosestTargetPosition),
        typeof(Code.Gameplay.Features.Weapon.CurrentAmmoCount),
        typeof(Code.Gameplay.Features.Weapon.EffectSetups),
        typeof(Code.Gameplay.Features.Weapon.EnemyPistol),
        typeof(Code.Gameplay.Features.Weapon.EnemyWeapon),
        typeof(Code.Gameplay.Features.Weapon.FirePositionTransform),
        typeof(Code.Gameplay.Features.Weapon.HeroAutomaticPistol),
        typeof(Code.Gameplay.Features.Weapon.HeroLaserBlaster),
        typeof(Code.Gameplay.Features.Weapon.HeroMachinegun),
        typeof(Code.Gameplay.Features.Weapon.HeroPistol),
        typeof(Code.Gameplay.Features.Weapon.HeroPlasmaGun),
        typeof(Code.Gameplay.Features.Weapon.HeroRevolver),
        typeof(Code.Gameplay.Features.Weapon.HeroRocketLauncher),
        typeof(Code.Gameplay.Features.Weapon.HeroShotgun),
        typeof(Code.Gameplay.Features.Weapon.HeroSniper),
        typeof(Code.Gameplay.Features.Weapon.HeroWeapon),
        typeof(Code.Gameplay.Features.Weapon.InfinityAmmo),
        typeof(Code.Gameplay.Features.Weapon.MagazineNotEmpty),
        typeof(Code.Gameplay.Features.Weapon.MagazineSize),
        typeof(Code.Gameplay.Features.Weapon.MaxPelletsDeviation),
        typeof(Code.Gameplay.Features.Weapon.MaxWeaponEnchantsCount),
        typeof(Code.Gameplay.Features.Weapon.MinPelletsDeviation),
        typeof(Code.Gameplay.Features.Weapon.MultiPellet),
        typeof(Code.Gameplay.Features.Weapon.Pierce),
        typeof(Code.Gameplay.Features.Weapon.Precharged),
        typeof(Code.Gameplay.Features.Weapon.PrechargeTime),
        typeof(Code.Gameplay.Features.Weapon.PrechargeTimeLeft),
        typeof(Code.Gameplay.Features.Weapon.ReadyToShoot),
        typeof(Code.Gameplay.Features.Weapon.Reloading),
        typeof(Code.Gameplay.Features.Weapon.ReloadTime),
        typeof(Code.Gameplay.Features.Weapon.ReloadTimeLeft),
        typeof(Code.Gameplay.Features.Weapon.Shooting),
        typeof(Code.Gameplay.Features.Weapon.Shot),
        typeof(Code.Gameplay.Features.Weapon.StatusSetups),
        typeof(Code.Gameplay.Features.Weapon.Weapon),
        typeof(Code.Gameplay.Features.Weapon.WeaponEnchants),
        typeof(Code.Gameplay.Features.Weapon.WeaponOwnerId),
        typeof(Code.Gameplay.Features.Weapon.WeaponOwnerTypeIdComponent),
        typeof(Code.Gameplay.Features.Weapon.WeaponRotationAngle),
        typeof(Code.Gameplay.Features.Weapon.WeaponRotationPointTransform),
        typeof(Code.Gameplay.Features.Weapon.WeaponTypeIdComponent),
        typeof(Code.Meta.Features.Hud.AmmoHolderComponent),
        typeof(Code.Meta.Features.Hud.CoinsHolderComponent),
        typeof(Code.Meta.Features.Hud.EnchantHolderComponent),
        typeof(Code.Meta.Features.Hud.HeartHolderComponent),
        typeof(Code.Meta.Features.Hud.ReloadingAnimatorComponent),
        typeof(Code.Meta.Features.Hud.TimerHolderComponent),
        typeof(Code.Meta.Features.Hud.WeaponHolderComponent)
    };
}
