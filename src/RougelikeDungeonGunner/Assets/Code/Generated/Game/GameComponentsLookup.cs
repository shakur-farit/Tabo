//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public static class GameComponentsLookup {

    public const int Destructed = 0;
    public const int Parented = 1;
    public const int SelfDestructedTimer = 2;
    public const int Unparented = 3;
    public const int View = 4;
    public const int ViewParent = 5;
    public const int ViewPath = 6;
    public const int ViewPrefab = 7;
    public const int Color = 8;
    public const int Damage = 9;
    public const int DamageTakenAnimator = 10;
    public const int Id = 11;
    public const int ParentTransform = 12;
    public const int Processed = 13;
    public const int SpriteRenderer = 14;
    public const int StatusVisuals = 15;
    public const int Stunned = 16;
    public const int TrailRenderer = 17;
    public const int Transform = 18;
    public const int WorldPosition = 19;
    public const int Ammo = 20;
    public const int AmmoTypeId = 21;
    public const int Aura = 22;
    public const int AuraDuration = 23;
    public const int AuraDurationTimeLeft = 24;
    public const int AuraLayer = 25;
    public const int AuraLayerMask = 26;
    public const int AuraPeriod = 27;
    public const int AuraPeriodTimeLeft = 28;
    public const int AuraPeriodTimeUp = 29;
    public const int AuraRadius = 30;
    public const int AuraTypeId = 31;
    public const int EnemyBullet = 32;
    public const int HealingAura = 33;
    public const int HealingAuraApplied = 34;
    public const int LaserBolt = 35;
    public const int LightBullet = 36;
    public const int LongRangeBullet = 37;
    public const int RequestHealingAura = 38;
    public const int RequestShield = 39;
    public const int RifleBullet = 40;
    public const int RocketMissile = 41;
    public const int Shield = 42;
    public const int ShieldApplied = 43;
    public const int ShotgunShell = 44;
    public const int SigilAmmo = 45;
    public const int TargetLimit = 46;
    public const int AddedInList = 47;
    public const int AmmoPattern = 48;
    public const int AmmoPatternId = 49;
    public const int AmmoPatternSetup = 50;
    public const int AmmoTransformsList = 51;
    public const int CirclePattern = 52;
    public const int PatternAmmoCount = 53;
    public const int PatternBranches = 54;
    public const int PatternCurrentAngle = 55;
    public const int PatternEmpty = 56;
    public const int PatternRadius = 57;
    public const int PatternRotateSpeed = 58;
    public const int SinglePattern = 59;
    public const int StarPattern = 60;
    public const int TrianglePattern = 61;
    public const int MinDistanceForRepath = 62;
    public const int Path = 63;
    public const int Pathfinder = 64;
    public const int PathfinderAvailable = 65;
    public const int PathfinderInitialized = 66;
    public const int PathfindingIntervalTimer = 67;
    public const int PathfindingTimerLeft = 68;
    public const int PathfindingTimerUp = 69;
    public const int BaseStats = 70;
    public const int StatChange = 71;
    public const int StatModifiers = 72;
    public const int BoxCastHeight = 73;
    public const int BoxCastWidth = 74;
    public const int CastStartPositionTransform = 75;
    public const int CollectTargetsContinuously = 76;
    public const int CollectTargetsInterval = 77;
    public const int CollectTargetsTimer = 78;
    public const int CollisionInFront = 79;
    public const int CollisionNormal = 80;
    public const int ForwardCastDistance = 81;
    public const int ProcessedTargets = 82;
    public const int Radius = 83;
    public const int Reached = 84;
    public const int ReadyToCollectTargets = 85;
    public const int TargetLayerMask = 86;
    public const int TargetsBuffer = 87;
    public const int Cooldown = 88;
    public const int CooldownLeft = 89;
    public const int CooldownUp = 90;
    public const int CollisionTilemap = 91;
    public const int Dungeon = 92;
    public const int DungeonAvailable = 93;
    public const int DungeonTypeId = 94;
    public const int HeroStartPosition = 95;
    public const int ValidPositions = 96;
    public const int ValidSprite = 97;
    public const int DamageEffect = 98;
    public const int Effect = 99;
    public const int EffectValue = 100;
    public const int HealEffect = 101;
    public const int ProducerId = 102;
    public const int TargetId = 103;
    public const int Enchant = 104;
    public const int EnchantAlreadyHeld = 105;
    public const int EnchantDuration = 106;
    public const int EnchantTimeLeft = 107;
    public const int EnchantTypeId = 108;
    public const int EnchantUI = 109;
    public const int EnchantVisualEffect = 110;
    public const int ExplosiveEnchant = 111;
    public const int FlameEnchant = 112;
    public const int FreezeEnchant = 113;
    public const int NewCollectedEnchant = 114;
    public const int PoisonEnchant = 115;
    public const int Enemy = 116;
    public const int EnemyAnimator = 117;
    public const int EnemyTypeId = 118;
    public const int Grimonk = 119;
    public const int Hedusa = 120;
    public const int LastTargetPosition = 121;
    public const int MudRock = 122;
    public const int Orc = 123;
    public const int Slime = 124;
    public const int Slizzard = 125;
    public const int CurrentWeaponTypeId = 126;
    public const int Hero = 127;
    public const int HeroAnimator = 128;
    public const int HeroAvailable = 129;
    public const int HeroTypeId = 130;
    public const int TheGeneral = 131;
    public const int TheScientist = 132;
    public const int TheThief = 133;
    public const int Unweaponed = 134;
    public const int Weaponed = 135;
    public const int DungeonTypeOnLevel = 136;
    public const int EnemiesInLevelCount = 137;
    public const int EnemiesInLevelCountCalculated = 138;
    public const int EnemyWave = 139;
    public const int EnemyWaves = 140;
    public const int FinishingTime = 141;
    public const int FinishingTimeLeft = 142;
    public const int HeroSafeZoneRadius = 143;
    public const int Level = 144;
    public const int LevelTypeId = 145;
    public const int SpawnedEnemyWaves = 146;
    public const int StartingTime = 147;
    public const int StartingTimeLeft = 148;
    public const int StartingTimeUp = 149;
    public const int CurrentHp = 150;
    public const int Dead = 151;
    public const int MaxHp = 152;
    public const int ProcessingDeath = 153;
    public const int Coins = 154;
    public const int Collected = 155;
    public const int LootTypeId = 156;
    public const int PickupRadius = 157;
    public const int Pullable = 158;
    public const int Pulling = 159;
    public const int ParticleSystem = 160;
    public const int Smoke = 161;
    public const int SpecialEffect = 162;
    public const int SpecialEffectTypeId = 163;
    public const int Direction = 164;
    public const int FollowMovement = 165;
    public const int FollowMovementXAxisOffset = 166;
    public const int FollowMovementYAxisOffset = 167;
    public const int FollowTargetId = 168;
    public const int LinerMovement = 169;
    public const int MovementAvailable = 170;
    public const int Moving = 171;
    public const int OrbitalMovement = 172;
    public const int OrbitAngularSpeed = 173;
    public const int OrbitCenter = 174;
    public const int OrbitElapsedTime = 175;
    public const int OrbitInitialAngle = 176;
    public const int OrbitRadius = 177;
    public const int Rotating = 178;
    public const int RotationAngle = 179;
    public const int RotationAvailable = 180;
    public const int Speed = 181;
    public const int Affected = 182;
    public const int Applied = 183;
    public const int ApplierStatusLink = 184;
    public const int Explosive = 185;
    public const int Flame = 186;
    public const int Freeze = 187;
    public const int Period = 188;
    public const int Poison = 189;
    public const int Status = 190;
    public const int StatusDuration = 191;
    public const int StatusTimeLeft = 192;
    public const int StatusTypeId = 193;
    public const int TimeSinceLastTick = 194;
    public const int Unapplied = 195;
    public const int ClosestTargetPosition = 196;
    public const int CurrentAmmoCount = 197;
    public const int EffectSetups = 198;
    public const int EnemyCircleSigil = 199;
    public const int EnemyPistol = 200;
    public const int EnemyStarSigil = 201;
    public const int EnemyTriangleSigil = 202;
    public const int EnemyWeapon = 203;
    public const int FirePositionTransform = 204;
    public const int HeroAutomaticPistol = 205;
    public const int HeroCircleSigil = 206;
    public const int HeroLaserBlaster = 207;
    public const int HeroMachinegun = 208;
    public const int HeroPistol = 209;
    public const int HeroPlasmaGun = 210;
    public const int HeroRevolver = 211;
    public const int HeroRocketLauncher = 212;
    public const int HeroShotgun = 213;
    public const int HeroSniper = 214;
    public const int HeroStarSigil = 215;
    public const int HeroTriangleSigil = 216;
    public const int HeroWeapon = 217;
    public const int InfinityAmmo = 218;
    public const int MagazineNotEmpty = 219;
    public const int MagazineSize = 220;
    public const int MaxPelletsDeviation = 221;
    public const int MaxWeaponEnchantsCount = 222;
    public const int MinPelletsDeviation = 223;
    public const int MultiPellet = 224;
    public const int Pierce = 225;
    public const int Precharged = 226;
    public const int PrechargeTime = 227;
    public const int PrechargeTimeLeft = 228;
    public const int ReadyToShoot = 229;
    public const int Reloading = 230;
    public const int ReloadTime = 231;
    public const int ReloadTimeLeft = 232;
    public const int Shooting = 233;
    public const int Shot = 234;
    public const int StatusSetups = 235;
    public const int Weapon = 236;
    public const int WeaponEnchants = 237;
    public const int WeaponOwnerId = 238;
    public const int WeaponOwnerTypeId = 239;
    public const int WeaponRotationAngle = 240;
    public const int WeaponRotationPointTransform = 241;
    public const int WeaponTypeId = 242;
    public const int AmmoHolder = 243;
    public const int CoinsHolder = 244;
    public const int EnchantHolder = 245;
    public const int HeartHolder = 246;
    public const int ReloadingAnimator = 247;
    public const int TimerHolder = 248;
    public const int WeaponHolder = 249;

    public const int TotalComponents = 250;

    public static readonly string[] componentNames = {
        "Destructed",
        "Parented",
        "SelfDestructedTimer",
        "Unparented",
        "View",
        "ViewParent",
        "ViewPath",
        "ViewPrefab",
        "Color",
        "Damage",
        "DamageTakenAnimator",
        "Id",
        "ParentTransform",
        "Processed",
        "SpriteRenderer",
        "StatusVisuals",
        "Stunned",
        "TrailRenderer",
        "Transform",
        "WorldPosition",
        "Ammo",
        "AmmoTypeId",
        "Aura",
        "AuraDuration",
        "AuraDurationTimeLeft",
        "AuraLayer",
        "AuraLayerMask",
        "AuraPeriod",
        "AuraPeriodTimeLeft",
        "AuraPeriodTimeUp",
        "AuraRadius",
        "AuraTypeId",
        "EnemyBullet",
        "HealingAura",
        "HealingAuraApplied",
        "LaserBolt",
        "LightBullet",
        "LongRangeBullet",
        "RequestHealingAura",
        "RequestShield",
        "RifleBullet",
        "RocketMissile",
        "Shield",
        "ShieldApplied",
        "ShotgunShell",
        "SigilAmmo",
        "TargetLimit",
        "AddedInList",
        "AmmoPattern",
        "AmmoPatternId",
        "AmmoPatternSetup",
        "AmmoTransformsList",
        "CirclePattern",
        "PatternAmmoCount",
        "PatternBranches",
        "PatternCurrentAngle",
        "PatternEmpty",
        "PatternRadius",
        "PatternRotateSpeed",
        "SinglePattern",
        "StarPattern",
        "TrianglePattern",
        "MinDistanceForRepath",
        "Path",
        "Pathfinder",
        "PathfinderAvailable",
        "PathfinderInitialized",
        "PathfindingIntervalTimer",
        "PathfindingTimerLeft",
        "PathfindingTimerUp",
        "BaseStats",
        "StatChange",
        "StatModifiers",
        "BoxCastHeight",
        "BoxCastWidth",
        "CastStartPositionTransform",
        "CollectTargetsContinuously",
        "CollectTargetsInterval",
        "CollectTargetsTimer",
        "CollisionInFront",
        "CollisionNormal",
        "ForwardCastDistance",
        "ProcessedTargets",
        "Radius",
        "Reached",
        "ReadyToCollectTargets",
        "TargetLayerMask",
        "TargetsBuffer",
        "Cooldown",
        "CooldownLeft",
        "CooldownUp",
        "CollisionTilemap",
        "Dungeon",
        "DungeonAvailable",
        "DungeonTypeId",
        "HeroStartPosition",
        "ValidPositions",
        "ValidSprite",
        "DamageEffect",
        "Effect",
        "EffectValue",
        "HealEffect",
        "ProducerId",
        "TargetId",
        "Enchant",
        "EnchantAlreadyHeld",
        "EnchantDuration",
        "EnchantTimeLeft",
        "EnchantTypeId",
        "EnchantUI",
        "EnchantVisualEffect",
        "ExplosiveEnchant",
        "FlameEnchant",
        "FreezeEnchant",
        "NewCollectedEnchant",
        "PoisonEnchant",
        "Enemy",
        "EnemyAnimator",
        "EnemyTypeId",
        "Grimonk",
        "Hedusa",
        "LastTargetPosition",
        "MudRock",
        "Orc",
        "Slime",
        "Slizzard",
        "CurrentWeaponTypeId",
        "Hero",
        "HeroAnimator",
        "HeroAvailable",
        "HeroTypeId",
        "TheGeneral",
        "TheScientist",
        "TheThief",
        "Unweaponed",
        "Weaponed",
        "DungeonTypeOnLevel",
        "EnemiesInLevelCount",
        "EnemiesInLevelCountCalculated",
        "EnemyWave",
        "EnemyWaves",
        "FinishingTime",
        "FinishingTimeLeft",
        "HeroSafeZoneRadius",
        "Level",
        "LevelTypeId",
        "SpawnedEnemyWaves",
        "StartingTime",
        "StartingTimeLeft",
        "StartingTimeUp",
        "CurrentHp",
        "Dead",
        "MaxHp",
        "ProcessingDeath",
        "Coins",
        "Collected",
        "LootTypeId",
        "PickupRadius",
        "Pullable",
        "Pulling",
        "ParticleSystem",
        "Smoke",
        "SpecialEffect",
        "SpecialEffectTypeId",
        "Direction",
        "FollowMovement",
        "FollowMovementXAxisOffset",
        "FollowMovementYAxisOffset",
        "FollowTargetId",
        "LinerMovement",
        "MovementAvailable",
        "Moving",
        "OrbitalMovement",
        "OrbitAngularSpeed",
        "OrbitCenter",
        "OrbitElapsedTime",
        "OrbitInitialAngle",
        "OrbitRadius",
        "Rotating",
        "RotationAngle",
        "RotationAvailable",
        "Speed",
        "Affected",
        "Applied",
        "ApplierStatusLink",
        "Explosive",
        "Flame",
        "Freeze",
        "Period",
        "Poison",
        "Status",
        "StatusDuration",
        "StatusTimeLeft",
        "StatusTypeId",
        "TimeSinceLastTick",
        "Unapplied",
        "ClosestTargetPosition",
        "CurrentAmmoCount",
        "EffectSetups",
        "EnemyCircleSigil",
        "EnemyPistol",
        "EnemyStarSigil",
        "EnemyTriangleSigil",
        "EnemyWeapon",
        "FirePositionTransform",
        "HeroAutomaticPistol",
        "HeroCircleSigil",
        "HeroLaserBlaster",
        "HeroMachinegun",
        "HeroPistol",
        "HeroPlasmaGun",
        "HeroRevolver",
        "HeroRocketLauncher",
        "HeroShotgun",
        "HeroSniper",
        "HeroStarSigil",
        "HeroTriangleSigil",
        "HeroWeapon",
        "InfinityAmmo",
        "MagazineNotEmpty",
        "MagazineSize",
        "MaxPelletsDeviation",
        "MaxWeaponEnchantsCount",
        "MinPelletsDeviation",
        "MultiPellet",
        "Pierce",
        "Precharged",
        "PrechargeTime",
        "PrechargeTimeLeft",
        "ReadyToShoot",
        "Reloading",
        "ReloadTime",
        "ReloadTimeLeft",
        "Shooting",
        "Shot",
        "StatusSetups",
        "Weapon",
        "WeaponEnchants",
        "WeaponOwnerId",
        "WeaponOwnerTypeId",
        "WeaponRotationAngle",
        "WeaponRotationPointTransform",
        "WeaponTypeId",
        "AmmoHolder",
        "CoinsHolder",
        "EnchantHolder",
        "HeartHolder",
        "ReloadingAnimator",
        "TimerHolder",
        "WeaponHolder"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(Code.Common.Destructed),
        typeof(Code.Common.Parented),
        typeof(Code.Common.SelfDestructedTimer),
        typeof(Code.Common.Unparented),
        typeof(Code.Common.View),
        typeof(Code.Common.ViewParent),
        typeof(Code.Common.ViewPath),
        typeof(Code.Common.ViewPrefab),
        typeof(Code.Gameplay.Common.ColorComponent),
        typeof(Code.Gameplay.Common.Damage),
        typeof(Code.Gameplay.Common.DamageTakenAnimatorComponent),
        typeof(Code.Gameplay.Common.Id),
        typeof(Code.Gameplay.Common.ParentTransform),
        typeof(Code.Gameplay.Common.Processed),
        typeof(Code.Gameplay.Common.SpriteRendererComponent),
        typeof(Code.Gameplay.Common.StatusVisualsComponent),
        typeof(Code.Gameplay.Common.Stunned),
        typeof(Code.Gameplay.Common.TrailRendererComponent),
        typeof(Code.Gameplay.Common.TransformComponent),
        typeof(Code.Gameplay.Common.WorldPosition),
        typeof(Code.Gameplay.Features.Ammo.Ammo),
        typeof(Code.Gameplay.Features.Ammo.AmmoTypeIdComponent),
        typeof(Code.Gameplay.Features.Ammo.Aura),
        typeof(Code.Gameplay.Features.Ammo.AuraDuration),
        typeof(Code.Gameplay.Features.Ammo.AuraDurationTimeLeft),
        typeof(Code.Gameplay.Features.Ammo.AuraLayer),
        typeof(Code.Gameplay.Features.Ammo.AuraLayerMask),
        typeof(Code.Gameplay.Features.Ammo.AuraPeriod),
        typeof(Code.Gameplay.Features.Ammo.AuraPeriodTimeLeft),
        typeof(Code.Gameplay.Features.Ammo.AuraPeriodTimeUp),
        typeof(Code.Gameplay.Features.Ammo.AuraRadius),
        typeof(Code.Gameplay.Features.Ammo.AuraTypeIdComponent),
        typeof(Code.Gameplay.Features.Ammo.EnemyBullet),
        typeof(Code.Gameplay.Features.Ammo.HealingAura),
        typeof(Code.Gameplay.Features.Ammo.HealingAuraApplied),
        typeof(Code.Gameplay.Features.Ammo.LaserBolt),
        typeof(Code.Gameplay.Features.Ammo.LightBullet),
        typeof(Code.Gameplay.Features.Ammo.LongRangeBullet),
        typeof(Code.Gameplay.Features.Ammo.RequestHealingAura),
        typeof(Code.Gameplay.Features.Ammo.RequestShield),
        typeof(Code.Gameplay.Features.Ammo.RifleBullet),
        typeof(Code.Gameplay.Features.Ammo.RocketMissile),
        typeof(Code.Gameplay.Features.Ammo.Shield),
        typeof(Code.Gameplay.Features.Ammo.ShieldApplied),
        typeof(Code.Gameplay.Features.Ammo.ShotgunShell),
        typeof(Code.Gameplay.Features.Ammo.SigilAmmo),
        typeof(Code.Gameplay.Features.Ammo.TargetLimit),
        typeof(Code.Gameplay.Features.AmmoPattern.AddedInList),
        typeof(Code.Gameplay.Features.AmmoPattern.AmmoPattern),
        typeof(Code.Gameplay.Features.AmmoPattern.AmmoPatternId),
        typeof(Code.Gameplay.Features.AmmoPattern.AmmoPatternSetupComponent),
        typeof(Code.Gameplay.Features.AmmoPattern.AmmoTransformsList),
        typeof(Code.Gameplay.Features.AmmoPattern.CirclePattern),
        typeof(Code.Gameplay.Features.AmmoPattern.PatternAmmoCount),
        typeof(Code.Gameplay.Features.AmmoPattern.PatternBranches),
        typeof(Code.Gameplay.Features.AmmoPattern.PatternCurrentAngle),
        typeof(Code.Gameplay.Features.AmmoPattern.PatternEmpty),
        typeof(Code.Gameplay.Features.AmmoPattern.PatternRadius),
        typeof(Code.Gameplay.Features.AmmoPattern.PatternRotateSpeed),
        typeof(Code.Gameplay.Features.AmmoPattern.SinglePattern),
        typeof(Code.Gameplay.Features.AmmoPattern.StarPattern),
        typeof(Code.Gameplay.Features.AmmoPattern.TrianglePattern),
        typeof(Code.Gameplay.Features.AStar.MinDistanceForRepath),
        typeof(Code.Gameplay.Features.AStar.Path),
        typeof(Code.Gameplay.Features.AStar.Pathfinder),
        typeof(Code.Gameplay.Features.AStar.PathfinderAvailable),
        typeof(Code.Gameplay.Features.AStar.PathfinderInitialized),
        typeof(Code.Gameplay.Features.AStar.PathfindingIntervalTimer),
        typeof(Code.Gameplay.Features.AStar.PathfindingTimerLeft),
        typeof(Code.Gameplay.Features.AStar.PathfindingTimerUp),
        typeof(Code.Gameplay.Features.CharacterStats.BaseStats),
        typeof(Code.Gameplay.Features.CharacterStats.StatChange),
        typeof(Code.Gameplay.Features.CharacterStats.StatModifiers),
        typeof(Code.Gameplay.Features.Collection.BoxCastHeight),
        typeof(Code.Gameplay.Features.Collection.BoxCastWidth),
        typeof(Code.Gameplay.Features.Collection.CastStartPositionTransform),
        typeof(Code.Gameplay.Features.Collection.CollectTargetsContinuously),
        typeof(Code.Gameplay.Features.Collection.CollectTargetsInterval),
        typeof(Code.Gameplay.Features.Collection.CollectTargetsTimer),
        typeof(Code.Gameplay.Features.Collection.CollisionInFront),
        typeof(Code.Gameplay.Features.Collection.CollisionNormal),
        typeof(Code.Gameplay.Features.Collection.ForwardCastDistance),
        typeof(Code.Gameplay.Features.Collection.ProcessedTargets),
        typeof(Code.Gameplay.Features.Collection.Radius),
        typeof(Code.Gameplay.Features.Collection.Reached),
        typeof(Code.Gameplay.Features.Collection.ReadyToCollectTargets),
        typeof(Code.Gameplay.Features.Collection.TargetLayerMask),
        typeof(Code.Gameplay.Features.Collection.TargetsBuffer),
        typeof(Code.Gameplay.Features.Cooldowns.Cooldown),
        typeof(Code.Gameplay.Features.Cooldowns.CooldownLeft),
        typeof(Code.Gameplay.Features.Cooldowns.CooldownUp),
        typeof(Code.Gameplay.Features.Dungeon.CollisionTilemap),
        typeof(Code.Gameplay.Features.Dungeon.Dungeon),
        typeof(Code.Gameplay.Features.Dungeon.DungeonAvailable),
        typeof(Code.Gameplay.Features.Dungeon.DungeonTypeIdComponent),
        typeof(Code.Gameplay.Features.Dungeon.HeroStartPosition),
        typeof(Code.Gameplay.Features.Dungeon.ValidPositions),
        typeof(Code.Gameplay.Features.Dungeon.ValidSprite),
        typeof(Code.Gameplay.Features.Effects.DamageEffect),
        typeof(Code.Gameplay.Features.Effects.Effect),
        typeof(Code.Gameplay.Features.Effects.EffectValue),
        typeof(Code.Gameplay.Features.Effects.HealEffect),
        typeof(Code.Gameplay.Features.Effects.ProducerId),
        typeof(Code.Gameplay.Features.Effects.TargetId),
        typeof(Code.Gameplay.Features.Enchants.Enchant),
        typeof(Code.Gameplay.Features.Enchants.EnchantAlreadyHeld),
        typeof(Code.Gameplay.Features.Enchants.EnchantDuration),
        typeof(Code.Gameplay.Features.Enchants.EnchantTimeLeft),
        typeof(Code.Gameplay.Features.Enchants.EnchantTypeIdComponent),
        typeof(Code.Gameplay.Features.Enchants.EnchantUIComponent),
        typeof(Code.Gameplay.Features.Enchants.EnchantVisualEffectComponent),
        typeof(Code.Gameplay.Features.Enchants.ExplosiveEnchant),
        typeof(Code.Gameplay.Features.Enchants.FlameEnchant),
        typeof(Code.Gameplay.Features.Enchants.FreezeEnchant),
        typeof(Code.Gameplay.Features.Enchants.NewCollectedEnchant),
        typeof(Code.Gameplay.Features.Enchants.PoisonEnchant),
        typeof(Code.Gameplay.Features.Enemy.Enemy),
        typeof(Code.Gameplay.Features.Enemy.EnemyAnimatorComponent),
        typeof(Code.Gameplay.Features.Enemy.EnemyTypeIdComponent),
        typeof(Code.Gameplay.Features.Enemy.Grimonk),
        typeof(Code.Gameplay.Features.Enemy.Hedusa),
        typeof(Code.Gameplay.Features.Enemy.LastTargetPosition),
        typeof(Code.Gameplay.Features.Enemy.MudRock),
        typeof(Code.Gameplay.Features.Enemy.Orc),
        typeof(Code.Gameplay.Features.Enemy.Slime),
        typeof(Code.Gameplay.Features.Enemy.Slizzard),
        typeof(Code.Gameplay.Features.Hero.CurrentWeaponTypeId),
        typeof(Code.Gameplay.Features.Hero.Hero),
        typeof(Code.Gameplay.Features.Hero.HeroAnimatorComponent),
        typeof(Code.Gameplay.Features.Hero.HeroAvailable),
        typeof(Code.Gameplay.Features.Hero.HeroTypeIdComponent),
        typeof(Code.Gameplay.Features.Hero.TheGeneral),
        typeof(Code.Gameplay.Features.Hero.TheScientist),
        typeof(Code.Gameplay.Features.Hero.TheThief),
        typeof(Code.Gameplay.Features.Hero.Unweaponed),
        typeof(Code.Gameplay.Features.Hero.Weaponed),
        typeof(Code.Gameplay.Features.Level.DungeonTypeOnLevel),
        typeof(Code.Gameplay.Features.Level.EnemiesInLevelCount),
        typeof(Code.Gameplay.Features.Level.EnemiesInLevelCountCalculated),
        typeof(Code.Gameplay.Features.Level.EnemyWaveComponent),
        typeof(Code.Gameplay.Features.Level.EnemyWaves),
        typeof(Code.Gameplay.Features.Level.FinishingTime),
        typeof(Code.Gameplay.Features.Level.FinishingTimeLeft),
        typeof(Code.Gameplay.Features.Level.HeroSafeZoneRadius),
        typeof(Code.Gameplay.Features.Level.Level),
        typeof(Code.Gameplay.Features.Level.LevelTypeIdComponent),
        typeof(Code.Gameplay.Features.Level.SpawnedEnemyWaves),
        typeof(Code.Gameplay.Features.Level.StartingTime),
        typeof(Code.Gameplay.Features.Level.StartingTimeLeft),
        typeof(Code.Gameplay.Features.Level.StartingTimeUp),
        typeof(Code.Gameplay.Features.Lifetime.CurrentHp),
        typeof(Code.Gameplay.Features.Lifetime.Dead),
        typeof(Code.Gameplay.Features.Lifetime.MaxHp),
        typeof(Code.Gameplay.Features.Lifetime.ProcessingDeath),
        typeof(Code.Gameplay.Features.Loot.LootComponents.Coins),
        typeof(Code.Gameplay.Features.Loot.LootComponents.Collected),
        typeof(Code.Gameplay.Features.Loot.LootComponents.LootTypeIdComponent),
        typeof(Code.Gameplay.Features.Loot.LootComponents.PickupRadius),
        typeof(Code.Gameplay.Features.Loot.LootComponents.Pullable),
        typeof(Code.Gameplay.Features.Loot.LootComponents.Pulling),
        typeof(Code.Gameplay.Features.Loot.ParticleSystemComponent),
        typeof(Code.Gameplay.Features.Loot.Smoke),
        typeof(Code.Gameplay.Features.Loot.SpecialEffect),
        typeof(Code.Gameplay.Features.Loot.SpecialEffectTypeIdComponent),
        typeof(Code.Gameplay.Features.Movement.Direction),
        typeof(Code.Gameplay.Features.Movement.FollowMovement),
        typeof(Code.Gameplay.Features.Movement.FollowMovementXAxisOffset),
        typeof(Code.Gameplay.Features.Movement.FollowMovementYAxisOffset),
        typeof(Code.Gameplay.Features.Movement.FollowTargetId),
        typeof(Code.Gameplay.Features.Movement.LinerMovement),
        typeof(Code.Gameplay.Features.Movement.MovementAvailable),
        typeof(Code.Gameplay.Features.Movement.Moving),
        typeof(Code.Gameplay.Features.Movement.OrbitalMovement),
        typeof(Code.Gameplay.Features.Movement.OrbitAngularSpeed),
        typeof(Code.Gameplay.Features.Movement.OrbitCenter),
        typeof(Code.Gameplay.Features.Movement.OrbitElapsedTime),
        typeof(Code.Gameplay.Features.Movement.OrbitInitialAngle),
        typeof(Code.Gameplay.Features.Movement.OrbitRadius),
        typeof(Code.Gameplay.Features.Movement.Rotating),
        typeof(Code.Gameplay.Features.Movement.RotationAngle),
        typeof(Code.Gameplay.Features.Movement.RotationAvailable),
        typeof(Code.Gameplay.Features.Movement.Speed),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Affected),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Applied),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.ApplierStatusLink),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Explosive),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Flame),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Freeze),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Period),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Poison),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Status),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.StatusDuration),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.StatusTimeLeft),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.StatusTypeIdComponent),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.TimeSinceLastTick),
        typeof(Code.Gameplay.Features.Statuses.StatusComponents.Unapplied),
        typeof(Code.Gameplay.Features.Weapon.ClosestTargetPosition),
        typeof(Code.Gameplay.Features.Weapon.CurrentAmmoCount),
        typeof(Code.Gameplay.Features.Weapon.EffectSetups),
        typeof(Code.Gameplay.Features.Weapon.EnemyCircleSigil),
        typeof(Code.Gameplay.Features.Weapon.EnemyPistol),
        typeof(Code.Gameplay.Features.Weapon.EnemyStarSigil),
        typeof(Code.Gameplay.Features.Weapon.EnemyTriangleSigil),
        typeof(Code.Gameplay.Features.Weapon.EnemyWeapon),
        typeof(Code.Gameplay.Features.Weapon.FirePositionTransform),
        typeof(Code.Gameplay.Features.Weapon.HeroAutomaticPistol),
        typeof(Code.Gameplay.Features.Weapon.HeroCircleSigil),
        typeof(Code.Gameplay.Features.Weapon.HeroLaserBlaster),
        typeof(Code.Gameplay.Features.Weapon.HeroMachinegun),
        typeof(Code.Gameplay.Features.Weapon.HeroPistol),
        typeof(Code.Gameplay.Features.Weapon.HeroPlasmaGun),
        typeof(Code.Gameplay.Features.Weapon.HeroRevolver),
        typeof(Code.Gameplay.Features.Weapon.HeroRocketLauncher),
        typeof(Code.Gameplay.Features.Weapon.HeroShotgun),
        typeof(Code.Gameplay.Features.Weapon.HeroSniper),
        typeof(Code.Gameplay.Features.Weapon.HeroStarSigil),
        typeof(Code.Gameplay.Features.Weapon.HeroTriangleSigil),
        typeof(Code.Gameplay.Features.Weapon.HeroWeapon),
        typeof(Code.Gameplay.Features.Weapon.InfinityAmmo),
        typeof(Code.Gameplay.Features.Weapon.MagazineNotEmpty),
        typeof(Code.Gameplay.Features.Weapon.MagazineSize),
        typeof(Code.Gameplay.Features.Weapon.MaxPelletsDeviation),
        typeof(Code.Gameplay.Features.Weapon.MaxWeaponEnchantsCount),
        typeof(Code.Gameplay.Features.Weapon.MinPelletsDeviation),
        typeof(Code.Gameplay.Features.Weapon.MultiPellet),
        typeof(Code.Gameplay.Features.Weapon.Pierce),
        typeof(Code.Gameplay.Features.Weapon.Precharged),
        typeof(Code.Gameplay.Features.Weapon.PrechargeTime),
        typeof(Code.Gameplay.Features.Weapon.PrechargeTimeLeft),
        typeof(Code.Gameplay.Features.Weapon.ReadyToShoot),
        typeof(Code.Gameplay.Features.Weapon.Reloading),
        typeof(Code.Gameplay.Features.Weapon.ReloadTime),
        typeof(Code.Gameplay.Features.Weapon.ReloadTimeLeft),
        typeof(Code.Gameplay.Features.Weapon.Shooting),
        typeof(Code.Gameplay.Features.Weapon.Shot),
        typeof(Code.Gameplay.Features.Weapon.StatusSetups),
        typeof(Code.Gameplay.Features.Weapon.Weapon),
        typeof(Code.Gameplay.Features.Weapon.WeaponEnchants),
        typeof(Code.Gameplay.Features.Weapon.WeaponOwnerId),
        typeof(Code.Gameplay.Features.Weapon.WeaponOwnerTypeIdComponent),
        typeof(Code.Gameplay.Features.Weapon.WeaponRotationAngle),
        typeof(Code.Gameplay.Features.Weapon.WeaponRotationPointTransform),
        typeof(Code.Gameplay.Features.Weapon.WeaponTypeIdComponent),
        typeof(Code.Meta.Features.Hud.AmmoHolderComponent),
        typeof(Code.Meta.Features.Hud.CoinsHolderComponent),
        typeof(Code.Meta.Features.Hud.EnchantHolderComponent),
        typeof(Code.Meta.Features.Hud.HeartHolderComponent),
        typeof(Code.Meta.Features.Hud.ReloadingAnimatorComponent),
        typeof(Code.Meta.Features.Hud.TimerHolderComponent),
        typeof(Code.Meta.Features.Hud.WeaponHolderComponent)
    };
}
